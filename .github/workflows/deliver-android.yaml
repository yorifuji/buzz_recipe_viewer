name: deliver android

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deliver:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .env
        env:
          ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        run: |
          make create-env-file

      - name: Create keystore file
        env:
          ANDROID_KEY_JKS_BASE64: ${{ secrets.ANDROID_KEY_JKS_BASE64 }}
        run: |
          echo $ANDROID_KEY_JKS_BASE64 | base64 --decode > android/app/upload.jks

      - name: Create key.properties file
        env:
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
        run: |
          echo "storeFile=./upload.jks" > android/key.properties
          echo "storePassword=$ANDROID_STORE_PASSWORD" >> android/key.properties
          echo "keyPassword=$ANDROID_KEY_PASSWORD" >> android/key.properties
          echo "keyAlias=$ANDROID_KEY_ALIAS" >> android/key.properties

      - name: Create google service account file
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64 }}
        run: |
          echo $GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64 | base64 --decode > android/service-account.json

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Run flutter version
        run: flutter --version

      - name: Run flutter pub get
        run: flutter pub get

      - name: Get Version Number
        run: |
          echo "APP_VERSION=$(flutter pub run cider version)" >> $GITHUB_ENV

      - name: Build app bundle
        id: build
        run: flutter build appbundle

      - name: Get Package name
        run: |
          echo "PACKAGE_NAME=$(sed -n 's/ *package="\([^"]*\)">/\1/p' android/app/src/main/AndroidManifest.xml)" >> $GITHUB_ENV

      - name: Upload to Google Play
        id: upload
        uses: r0adkll/upload-google-play@78c9e796b1035c94169c101d8e46cb880194bfc3
        with:
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          serviceAccountJson: android/service-account.json
          packageName: ${{ env.PACKAGE_NAME }}
          releaseName: ${{ env.APP_VERSION }}
          track: internal
          status: draft
