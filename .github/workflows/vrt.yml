name: vrt

run-name: VRT ${{ (vars.RUNS_ON_SELF_HOSTED == null && '(on GitHub-hosted)') || '(on self-hosted)' }}

on:
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lookup:
    name: lookup
    runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
    timeout-minutes: 30
    outputs:
      sha: ${{ steps.merge-base.outputs.sha }}
      cache-hit: ${{ steps.lookup.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: sha of merge base(common parent)
        id: merge-base
        shell: bash # set pipefail option
        run: echo "sha=$(git merge-base origin/$GITHUB_BASE_REF origin/$GITHUB_HEAD_REF)" >> $GITHUB_OUTPUT

      - name: lookup reg-suit cache
        id: lookup
        uses: actions/cache@v3
        with:
          key: reg-suit-cache-${{ steps.merge-base.outputs.sha }}
          path: .reg/
          lookup-only: true

  create-cache:
    name: create cache
    needs: lookup
    if: ${{ !cancelled() && !failure() && needs.lookup.outputs.cache-hit != 'true' }}
    runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.lookup.outputs.sha }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ (vars.FLUTTER_VERSION != null && vars.FLUTTER_VERSION) || '' }}
          channel: stable
          cache: ${{ (vars.RUNS_ON_SELF_HOSTED == null && true) || false }}

      - run: flutter pub get

      - name: Run pre-process script
        env:
          PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
        run: |
          if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
            echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ${{ runner.temp }}/pre-process.sh && bash ${{ runner.temp }}/pre-process.sh
          fi

      - name: Create golden images
        run: |
          flutter test --update-goldens --tags=golden
          mkdir -p .reg/
          mv test/golden_test/goldens .reg/expected

      - uses: actions/cache/save@v3
        with:
          path: .reg/
          key: reg-suit-cache-${{ needs.lookup.outputs.sha }}

      # - name: Upload .reg/ to articaft(for test)
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: reg-suit-cache-artifact
      #     path: .reg/

  compare:
    name: compare
    needs:
      - lookup
      - create-cache
    if: ${{ !cancelled() && !failure() }}
    runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ (vars.FLUTTER_VERSION != null && vars.FLUTTER_VERSION) || '' }}
          channel: stable
          cache: ${{ (vars.RUNS_ON_SELF_HOSTED == null && true) || false }}

      - run: flutter pub get

      - name: Run pre-process script
        env:
          PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
        run: |
          if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
            echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ${{ runner.temp }}/pre-process.sh && bash ${{ runner.temp }}/pre-process.sh
          fi

      - name: Create golden images
        run: flutter test --update-goldens --tags=golden

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: restore yarn cache
        uses: actions/cache@v3
        with:
          key: reg-suit-cache-yarn-${{ hashFiles('**/yarn.lock') }}
          path: .yarn/cache/

      - run: yarn install --immutable

      - name: restore reg-suit cache
        uses: actions/cache/restore@v3
        with:
          key: reg-suit-cache-${{ needs.lookup.outputs.sha }}
          path: .reg/

      - name: Compare by reg-suit
        run: npx reg-suit compare 2>&1 | sed 's/\x1b\[[0-9;]*[a-zA-Z]//g' | tee reg-suit.log

      - name: Upload .reg/ to articaft
        uses: actions/upload-artifact@v3
        with:
          name: reg-suit-compare-result
          path: .reg/
          retention-days: 3

      - name: Generate Comment
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const log = fs.readFileSync('./reg-suit.log', 'utf-8');

            const parseStats = () => {
              const lines = log.split('\n');
              const stats = {
                changed: 0,
                newItems: 0,
                deleted: 0,
                passing: 0
              };
              for (const line of lines) {
                if (line.includes('Changed items')) {
                    stats.changed = String(parseInt(line.split(': ')[1], 10));
                } else if (line.includes('New items')) {
                    stats.newItems = String(parseInt(line.split(': ')[1], 10));
                } else if (line.includes('Deleted items')) {
                    stats.deleted = String(parseInt(line.split(': ')[1], 10));
                } else if (line.includes('Passed items')) {
                    stats.passing = String(parseInt(line.split(': ')[1], 10));
                }
              }
              return stats;
            };
            const stats = parseStats();
            const parseIcon = () => {
              if (stats.changed != 0 || stats.deleted != 0) {
                return '❗';
              } else if (stats.newItems != 0) {
                return '💡';
              } else {
                return '✅';
              }
            };
            const icon = parseIcon();

            const markdown = await core.summary
              .addHeading(`${icon} reg-suit has checked for visual changes`, 3)
              .addTable([
                ["🔴 Changed",  "🟡 New",        "⚫ Deleted",  "🔵 Passing"],
                [stats.changed, stats.newItems, stats.deleted, stats.passing]
              ])
              .addHeading("📊 Download Report", 3)
              .addLink('You can download the report from the artifact here', `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`)
              .addHeading("📝 Log", 3)
              .addCodeBlock(log, "log")
              .stringify()
            await core.summary.write()

            fs.writeFileSync('./reg-suit-result.md', markdown);

      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.number }} --edit-last -F ./reg-suit-result.md || gh pr comment ${{ github.event.number }} -F ./reg-suit-result.md

  action-timeline:
    needs: [lookup, create-cache, compare]
    runs-on: ubuntu-latest
    steps:
      - uses: Kesin11/actions-timeline@v2
