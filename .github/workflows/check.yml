name: check

run-name: Check ${{ (vars.RUNS_ON_SELF_HOSTED == null && '(on GitHub-hosted)') || '(on self-hosted)' }}

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  pull-requests: write
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ (vars.FLUTTER_VERSION != null && vars.FLUTTER_VERSION) || '' }}
          channel: stable
          cache: ${{ (vars.RUNS_ON_SELF_HOSTED == null && true) || false }}

      - run: flutter pub get

      - run: dart format -l 80 --set-exit-if-changed .

      - name: Check for changes
        if: failure()
        run: git diff --exit-code

  analyze:
    runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Run pre-process script
        shell: bash
        env:
          PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
        run: |
          if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
            echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ${{ runner.temp }}/pre-process.sh && bash ${{ runner.temp }}/pre-process.sh
          fi

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ (vars.FLUTTER_VERSION != null && vars.FLUTTER_VERSION) || '' }}
          channel: stable
          cache: ${{ (vars.RUNS_ON_SELF_HOSTED == null && true) || false }}

      - run: flutter pub get

      - name: Install matcher
        run: echo "::add-matcher::.github/analyzer-problem-matcher.json"

      - name: Run flutter analyze
        shell: bash
        run: |
          flutter analyze | tee ./flutter_analyze_report.txt

      - name: Remove matcher
        if: always()
        run: echo "::remove-matcher owner=dart-analyzer::"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: ${{ always() && vars.RUNS_ON_SELF_HOSTED == null }}
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Danger
        uses: MeilCli/danger-action@ed050c31909897ac604eac80438ee6ca6b7eb8fe
        if: always()
        with:
          plugins_file: '.github/Gemfile'
          install_path: 'vendor/bundle'
          danger_file: '.github/Dangerfile'
          danger_id: 'danger-pr'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # diff:
  #   runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
  #   timeout-minutes: 30
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: ${{ (vars.FLUTTER_VERSION != null && vars.FLUTTER_VERSION) || '' }}
  #         channel: stable
  #         cache: ${{ (vars.RUNS_ON_SELF_HOSTED == null && true) || false }}

  #     - run: flutter pub get

  #     - run: make build-runner

  #     - name: Check for changes
  #       run: |
  #         if [[ -n $(git status --porcelain) ]]; then
  #           echo "There are changes in the working tree, please commit them before running this action."
  #           git status
  #           exit 1
  #         fi

  test:
    runs-on: ${{ (vars.RUNS_ON_SELF_HOSTED == null && 'ubuntu-latest') || 'self-hosted' }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Run pre-process script
        shell: bash
        env:
          PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
        run: |
          if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
            echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ${{ runner.temp }}/pre-process.sh && bash ${{ runner.temp }}/pre-process.sh
          fi

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ (vars.FLUTTER_VERSION != null && vars.FLUTTER_VERSION) || '' }}
          channel: stable
          cache: ${{ (vars.RUNS_ON_SELF_HOSTED == null && true) || false }}

      - run: flutter pub get

      - run: flutter test -x golden --reporter json > test_report.json

      - uses: dorny/test-reporter@afe6793191b75b608954023a46831a3fe10048d4
        id: test-reporter
        if: success() || failure() # ignore cancelled
        with:
          name: test report
          path: test_report.json
          reporter: flutter-json
          fail-on-error: false

      # - if: success() || failure() # ignore cancelled
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     cat << EOF > ./test-reporter.md
      #     ### Test Report

      #     [Test report is here](${{ steps.test-reporter.outputs.url_html }})

      #     EOF
      #     gh pr comment ${{ github.event.number }} --edit-last -F ./test-reporter.md || gh pr comment ${{ github.event.number }} -F ./test-reporter.md

  action-timeline:
    needs: [format, analyze, test]
    runs-on: ubuntu-latest
    steps:
      - uses: Kesin11/actions-timeline@v2
