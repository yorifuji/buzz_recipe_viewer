name: build android

on:
  workflow_dispatch:
    inputs:
      upload-artifact:
        description: 'Upload aab to artifact'
        required: true
        type: boolean
        default: false
  workflow_call:
    inputs:
      upload-artifact:
        description: 'Upload aab to artifact'
        required: true
        type: boolean
        default: false
    outputs:
      filename:
        description: 'aab filename for uploaded to artifact'
        value: ${{ jobs.info.outputs.aab-filename }}
      release-name:
        description: 'release name'
        value: ${{ jobs.info.outputs.release-name }}
      package-name:
        description: 'package name'
        value: ${{ jobs.info.outputs.package-name }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      aab-filename: ${{ steps.info.outputs.aab-filename }}
      release-name: ${{ steps.info.outputs.release-name }}
      package-name: ${{ steps.info.outputs.package-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run pre-process script
        shell: bash
        env:
          PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
        run: |
          if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
            echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ./pre-process.sh && bash ./pre-process.sh
          fi

      - name: Create keystore file
        env:
          ANDROID_KEY_JKS_BASE64: ${{ secrets.ANDROID_KEY_JKS_BASE64 }}
        run: |
          echo $ANDROID_KEY_JKS_BASE64 | base64 --decode > android/app/upload.jks

      - name: Create key.properties file
        env:
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
        run: |
          echo "storeFile=./upload.jks" > android/key.properties
          echo "storePassword=$ANDROID_STORE_PASSWORD" >> android/key.properties
          echo "keyPassword=$ANDROID_KEY_PASSWORD" >> android/key.properties
          echo "keyAlias=$ANDROID_KEY_ALIAS" >> android/key.properties

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Run flutter version
        run: flutter --version

      - name: Run flutter pub get
        run: flutter pub get

      - name: Build app bundle
        run: |
          flutter build appbundle

      - name: Get Job Output info
        id: info
        run: |
          echo "RELEASE_NAME=$(flutter pub run cider version | sed -E 's/([0-9.]+)\+([0-9]+)/\2(\1)/g')" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$(sed -nE 's/.*package="(.*)".*/\1/p' android/app/src/main/AndroidManifest.xml)" >> $GITHUB_ENV
          echo "release-name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "package-name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "aab-filename=app-release.aab" >> $GITHUB_OUTPUT # fixed name, app-release.aab

      - name: Upload aab to artifact
        if: ${{ inputs.upload-artifact }}
        uses: actions/upload-artifact@v3
        with:
          name: aab
          path: build/app/outputs/bundle/release/app-release.aab
