name: Job deliver-ios

on:
  workflow_call:
  workflow_dispatch:

env:
  IOS_IPA_PATH: 'build/ios/ipa/buzz_recipe_viewer.ipa'

jobs:
  deliver:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .env
        env:
          ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        run: |
          make create-env-file

      - name: Import Provisioning Profile
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/distribution.mobileprovision

      - name: Import Certificate
        env:
          IOS_CERTIFICATE_P12_BASE64: ${{ secrets.IOS_CERTIFICATE_P12_BASE64 }}
          IOS_CERTIFICATE_P12_P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_P12_PASSWORD }}
          IOS_KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$IOS_CERTIFICATE_P12_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$IOS_KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$IOS_KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$IOS_CERTIFICATE_P12_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Run flutter version
        run: flutter --version

      - name: Run flutter pub get
        run: flutter pub get

      - name: Build ipa
        id: build
        run: flutter build ipa --export-options-plist=./ios/ExportOptions.plist

      - name: Upload to App Store Connect
        id: upload
        env:
          APPLE_APPLE_ID: ${{ secrets.APPLE_APPLE_ID }}
          APPLE_APP_PASS: ${{ secrets.APPLE_APP_PASS }}
        run: xcrun altool --upload-app --type ios -f "$IOS_IPA_PATH" -u "$APPLE_APPLE_ID" -p "$APPLE_APP_PASS"

      - name: PR Comment Success
        if: ${{ steps.build.conclusion == 'success' && steps.upload.conclusion == 'success' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUERST_NUMBER: ${{ github.event.pull_request.number }}
        run: gh pr comment $PULL_REQUERST_NUMBER --body "üôÜ‚Äç‚ôÇÔ∏è"

      - name: PR Comment Failure
        if: ${{ steps.build.conclusion != 'success' || steps.upload.conclusion != 'success' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUERST_NUMBER: ${{ github.event.pull_request.number }}
        run: gh pr comment $PULL_REQUERST_NUMBER --body "üôÖ‚Äç‚ôÇÔ∏è"

      - name: Notify Slack
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: 'deliver-ios'
          fields: repo,message,commit,author,action,eventName,ref,workflow,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
        if: always()
